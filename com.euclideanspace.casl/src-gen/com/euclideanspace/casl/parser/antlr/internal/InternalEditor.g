/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.euclideanspace.casl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.euclideanspace.casl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.euclideanspace.casl.services.EditorGrammarAccess;

}

@parser::members {

 	private EditorGrammarAccess grammarAccess;
 	
    public InternalEditorParser(TokenStream input, EditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBasicSpecBasicSpecParserRuleCall_0()); 
	    }
		lv_basicSpec_0_0=ruleBasicSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"basicSpec",
        		lv_basicSpec_0_0, 
        		"BasicSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBasicSpec
entryRuleBasicSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicSpecRule()); }
	 iv_ruleBasicSpec=ruleBasicSpec 
	 { $current=$iv_ruleBasicSpec.current; } 
	 EOF 
;

// Rule BasicSpec
ruleBasicSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicSpecAccess().getBasicItemsBasicItemsParserRuleCall_0_0()); 
	    }
		lv_basicItems_0_0=ruleBasicItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicSpecRule());
	        }
       		add(
       			$current, 
       			"basicItems",
        		lv_basicItems_0_0, 
        		"BasicItems");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |((
(
		lv_empty_1_0=	'{' 
    {
        newLeafNode(lv_empty_1_0, grammarAccess.getBasicSpecAccess().getEmptyLeftCurlyBracketKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		setWithLastConsumed($current, "empty", lv_empty_1_0, "{");
	    }

)
)	otherlv_2='}' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBasicSpecAccess().getRightCurlyBracketKeyword_1_1());
    }
))
;





// Entry rule entryRuleBasicItems
entryRuleBasicItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicItemsRule()); }
	 iv_ruleBasicItems=ruleBasicItems 
	 { $current=$iv_ruleBasicItems.current; } 
	 EOF 
;

// Rule BasicItems
ruleBasicItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getSSigItemsParserRuleCall_0_0()); 
	    }
		lv_s_0_0=ruleSigItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"s",
        		lv_s_0_0, 
        		"SigItems");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_1='free' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBasicItemsAccess().getFreeKeyword_1_0());
    }
(	otherlv_2='type' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBasicItemsAccess().getTypeKeyword_1_1_0());
    }

    |	otherlv_3='types' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBasicItemsAccess().getTypesKeyword_1_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDeclDatatypeDeclParserRuleCall_1_2_0()); 
	    }
		lv_datatypeDecl_4_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"datatypeDecl",
        		lv_datatypeDecl_4_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDecl2DatatypeDeclParserRuleCall_1_3_1_0()); 
	    }
		lv_datatypeDecl2_6_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"datatypeDecl2",
        		lv_datatypeDecl2_6_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_4());
    }
)?)
    |(	otherlv_8='generated' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBasicItemsAccess().getGeneratedKeyword_2_0());
    }
(	otherlv_9='type' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBasicItemsAccess().getTypeKeyword_2_1_0());
    }

    |	otherlv_10='types' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBasicItemsAccess().getTypesKeyword_2_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDeclDatatypeDeclParserRuleCall_2_2_0()); 
	    }
		lv_datatypeDecl_11_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"datatypeDecl",
        		lv_datatypeDecl_11_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDecl2DatatypeDeclParserRuleCall_2_3_1_0()); 
	    }
		lv_datatypeDecl2_13_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"datatypeDecl2",
        		lv_datatypeDecl2_13_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_2_4());
    }
)?)
    |(	otherlv_15='generated' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBasicItemsAccess().getGeneratedKeyword_3_0());
    }
	otherlv_16='{' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getBasicItemsAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getS2SigItemsParserRuleCall_3_2_0()); 
	    }
		lv_s2_17_0=ruleSigItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"s2",
        		lv_s2_17_0, 
        		"SigItems");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBasicItemsAccess().getRightCurlyBracketKeyword_3_3());
    }
(	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_3_4());
    }
)?)
    |((	otherlv_20='var' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getBasicItemsAccess().getVarKeyword_4_0_0());
    }

    |	otherlv_21='vars' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBasicItemsAccess().getVarsKeyword_4_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDeclVarDeclParserRuleCall_4_1_0()); 
	    }
		lv_varDecl_22_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"varDecl",
        		lv_varDecl_22_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDecl2VarDeclParserRuleCall_4_2_1_0()); 
	    }
		lv_varDecl2_24_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"varDecl2",
        		lv_varDecl2_24_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_25=';' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_4_3());
    }
)?)
    |(	otherlv_26='forall' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getBasicItemsAccess().getForallKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDeclVarDeclParserRuleCall_5_1_0()); 
	    }
		lv_varDecl_27_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"varDecl",
        		lv_varDecl_27_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_28=';' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDecl2VarDeclParserRuleCall_5_2_1_0()); 
	    }
		lv_varDecl2_29_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"varDecl2",
        		lv_varDecl2_29_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_30='.' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getBasicItemsAccess().getFullStopKeyword_5_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getFormulaFormulaParserRuleCall_5_4_0()); 
	    }
		lv_formula_31_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_31_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_32=';' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_5_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getFormula2FormulaParserRuleCall_5_5_1_0()); 
	    }
		lv_formula2_33_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"formula2",
        		lv_formula2_33_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_34=';' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_5_6());
    }
)?))
;





// Entry rule entryRuleSigItems
entryRuleSigItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigItemsRule()); }
	 iv_ruleSigItems=ruleSigItems 
	 { $current=$iv_ruleSigItems.current; } 
	 EOF 
;

// Rule SigItems
ruleSigItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='sort' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSigItemsAccess().getSortKeyword_0_0_0());
    }

    |	otherlv_1='sorts' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSigItemsAccess().getSortsKeyword_0_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getSortItemSortItemParserRuleCall_0_1_0()); 
	    }
		lv_sortItem_2_0=ruleSortItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"sortItem",
        		lv_sortItem_2_0, 
        		"SortItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSigItemsAccess().getSemicolonKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getSortItem2SortItemParserRuleCall_0_2_1_0()); 
	    }
		lv_sortItem2_4_0=ruleSortItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"sortItem2",
        		lv_sortItem2_4_0, 
        		"SortItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSigItemsAccess().getSemicolonKeyword_0_3());
    }
)?)
    |((	otherlv_6='op' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSigItemsAccess().getOpKeyword_1_0_0());
    }

    |	otherlv_7='ops' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSigItemsAccess().getOpsKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getOpItemOpItemParserRuleCall_1_1_0()); 
	    }
		lv_opItem_8_0=ruleOpItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"opItem",
        		lv_opItem_8_0, 
        		"OpItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSigItemsAccess().getSemicolonKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getOpItem2OpItemParserRuleCall_1_2_1_0()); 
	    }
		lv_opItem2_10_0=ruleOpItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"opItem2",
        		lv_opItem2_10_0, 
        		"OpItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSigItemsAccess().getSemicolonKeyword_1_3());
    }
)?)
    |((	otherlv_12='pred' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSigItemsAccess().getPredKeyword_2_0_0());
    }

    |	otherlv_13='preds' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSigItemsAccess().getPredsKeyword_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getPredItemPredItemParserRuleCall_2_1_0()); 
	    }
		lv_predItem_14_0=rulePredItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"predItem",
        		lv_predItem_14_0, 
        		"PredItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSigItemsAccess().getSemicolonKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getPredItem2PredItemParserRuleCall_2_2_1_0()); 
	    }
		lv_predItem2_16_0=rulePredItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"predItem2",
        		lv_predItem2_16_0, 
        		"PredItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSigItemsAccess().getSemicolonKeyword_2_3());
    }
)?)
    |((	otherlv_18='type' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSigItemsAccess().getTypeKeyword_3_0_0());
    }

    |	otherlv_19='types' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSigItemsAccess().getTypesKeyword_3_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getDatatypeDeclDatatypeDeclParserRuleCall_3_1_0()); 
	    }
		lv_datatypeDecl_20_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"datatypeDecl",
        		lv_datatypeDecl_20_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSigItemsAccess().getSemicolonKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getDatatypeDecl2DatatypeDeclParserRuleCall_3_2_1_0()); 
	    }
		lv_datatypeDecl2_22_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"datatypeDecl2",
        		lv_datatypeDecl2_22_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getSigItemsAccess().getSemicolonKeyword_3_3());
    }
)?))
;





// Entry rule entryRuleSortItem
entryRuleSortItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortItemRule()); }
	 iv_ruleSortItem=ruleSortItem 
	 { $current=$iv_ruleSortItem.current; } 
	 EOF 
;

// Rule SortItem
ruleSortItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSortItemAccess().getSortSortParserRuleCall_0_0()); 
	    }
		lv_sort_0_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortItemRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_0_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSortItemAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortItemAccess().getSort2SortParserRuleCall_1_1_0()); 
	    }
		lv_sort2_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortItemRule());
	        }
       		add(
       			$current, 
       			"sort2",
        		lv_sort2_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpItem
entryRuleOpItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpItemRule()); }
	 iv_ruleOpItem=ruleOpItem 
	 { $current=$iv_ruleOpItem.current; } 
	 EOF 
;

// Rule OpItem
ruleOpItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpNameOpNameParserRuleCall_0_0_0()); 
	    }
		lv_opName_0_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_0_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOpItemAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpName2OpNameParserRuleCall_0_1_1_0()); 
	    }
		lv_opName2_2_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		add(
       			$current, 
       			"opName2",
        		lv_opName2_2_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOpItemAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpTypeOpTypeParserRuleCall_0_3_0()); 
	    }
		lv_opType_4_0=ruleOpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opType",
        		lv_opType_4_0, 
        		"OpType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOpItemAccess().getCommaKeyword_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpAttrOpAttrParserRuleCall_0_4_1_0()); 
	    }
		lv_opAttr_6_0=ruleOpAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		add(
       			$current, 
       			"opAttr",
        		lv_opAttr_6_0, 
        		"OpAttr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpNameOpNameParserRuleCall_1_0_0()); 
	    }
		lv_opName_7_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_7_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpHeadOpHeadParserRuleCall_1_1_0()); 
	    }
		lv_opHead_8_0=ruleOpHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opHead",
        		lv_opHead_8_0, 
        		"OpHead");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOpItemAccess().getEqualsSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getTermTermParserRuleCall_1_3_0()); 
	    }
		lv_term_10_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_10_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOpType
entryRuleOpType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpTypeRule()); }
	 iv_ruleOpType=ruleOpType 
	 { $current=$iv_ruleOpType.current; } 
	 EOF 
;

// Rule OpType
ruleOpType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='?' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpTypeAccess().getQuestionMarkKeyword_0_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSortSortParserRuleCall_0_1_0()); 
	    }
		lv_sort_1_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_1_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSortSortParserRuleCall_1_0_0()); 
	    }
		lv_sort_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOpTypeAccess().getAsteriskKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSort2SortParserRuleCall_1_1_1_0()); 
	    }
		lv_sort2_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		add(
       			$current, 
       			"sort2",
        		lv_sort2_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5='?' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOpTypeAccess().getQuestionMarkKeyword_1_2());
    }
)?	otherlv_6='->' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOpTypeAccess().getHyphenMinusGreaterThanSignKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSort3SortParserRuleCall_1_4_0()); 
	    }
		lv_sort3_7_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		set(
       			$current, 
       			"sort3",
        		lv_sort3_7_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOpAttr
entryRuleOpAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAttrRule()); }
	 iv_ruleOpAttr=ruleOpAttr 
	 { $current=$iv_ruleOpAttr.current; } 
	 EOF 
;

// Rule OpAttr
ruleOpAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'assoc' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getOpAttrAccess().getOpAssocKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "assoc");
	    }

)
)
    |(
(
		lv_op_1_0=	'comm' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getOpAttrAccess().getOpCommKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "comm");
	    }

)
)
    |(
(
		lv_op_2_0=	'idem' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getOpAttrAccess().getOpIdemKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "idem");
	    }

)
)
    |((
(
		lv_op_3_0=	'unit' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getOpAttrAccess().getOpUnitKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "unit");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAttrAccess().getTermTermParserRuleCall_3_1_0()); 
	    }
		lv_term_4_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpAttrRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_4_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOpHead
entryRuleOpHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpHeadRule()); }
	 iv_ruleOpHead=ruleOpHead 
	 { $current=$iv_ruleOpHead.current; } 
	 EOF 
;

// Rule OpHead
ruleOpHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpHeadAccess().getColonKeyword_0_0());
    }
(	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOpHeadAccess().getQuestionMarkKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getSortSortParserRuleCall_0_2_0()); 
	    }
		lv_sort_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getArgDeclArgDeclParserRuleCall_1_0_0()); 
	    }
		lv_argDecl_3_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		set(
       			$current, 
       			"argDecl",
        		lv_argDecl_3_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOpHeadAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getArgDecl2ArgDeclParserRuleCall_1_1_1_0()); 
	    }
		lv_argDecl2_5_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		add(
       			$current, 
       			"argDecl2",
        		lv_argDecl2_5_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOpHeadAccess().getColonKeyword_1_2());
    }
(	otherlv_7='?' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOpHeadAccess().getQuestionMarkKeyword_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getSortSortParserRuleCall_1_4_0()); 
	    }
		lv_sort_8_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_8_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleArgDecl
entryRuleArgDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgDeclRule()); }
	 iv_ruleArgDecl=ruleArgDecl 
	 { $current=$iv_ruleArgDecl.current; } 
	 EOF 
;

// Rule ArgDecl
ruleArgDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgDeclAccess().getVarVarParserRuleCall_0_0()); 
	    }
		lv_var_0_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgDeclRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_0_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgDeclAccess().getSemicolonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgDeclAccess().getVar2VarParserRuleCall_1_1_0()); 
	    }
		lv_var2_2_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgDeclRule());
	        }
       		add(
       			$current, 
       			"var2",
        		lv_var2_2_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArgDeclAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgDeclAccess().getSortSortParserRuleCall_3_0()); 
	    }
		lv_sort_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgDeclRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePredItem
entryRulePredItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredItemRule()); }
	 iv_rulePredItem=rulePredItem 
	 { $current=$iv_rulePredItem.current; } 
	 EOF 
;

// Rule PredItem
rulePredItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredNamePredNameParserRuleCall_0_0_0()); 
	    }
		lv_predName_0_0=rulePredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"predName",
        		lv_predName_0_0, 
        		"PredName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPredItemAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredName2PredNameParserRuleCall_0_1_1_0()); 
	    }
		lv_predName2_2_0=rulePredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		add(
       			$current, 
       			"predName2",
        		lv_predName2_2_0, 
        		"PredName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPredItemAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredTypePredTypeParserRuleCall_0_3_0()); 
	    }
		lv_predType_4_0=rulePredType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		add(
       			$current, 
       			"predType",
        		lv_predType_4_0, 
        		"PredType");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredNamePredNameParserRuleCall_1_0_0()); 
	    }
		lv_predName_5_0=rulePredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"predName",
        		lv_predName_5_0, 
        		"PredName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredHeadPredHeadParserRuleCall_1_1_0()); 
	    }
		lv_predHead_6_0=rulePredHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"predHead",
        		lv_predHead_6_0, 
        		"PredHead");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='<=>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPredItemAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getFormulaFormulaParserRuleCall_1_3_0()); 
	    }
		lv_formula_8_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_8_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRulePredType
entryRulePredType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredTypeRule()); }
	 iv_rulePredType=rulePredType 
	 { $current=$iv_rulePredType.current; } 
	 EOF 
;

// Rule PredType
rulePredType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPredTypeAccess().getSortSortParserRuleCall_0_0_0()); 
	    }
		lv_sort_0_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredTypeRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_0_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='*' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPredTypeAccess().getAsteriskKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredTypeAccess().getSort2SortParserRuleCall_0_1_1_0()); 
	    }
		lv_sort2_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredTypeRule());
	        }
       		add(
       			$current, 
       			"sort2",
        		lv_sort2_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_b_3_0=	'(' 
    {
        newLeafNode(lv_b_3_0, grammarAccess.getPredTypeAccess().getBLeftParenthesisKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredTypeRule());
	        }
       		setWithLastConsumed($current, "b", lv_b_3_0, "(");
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredTypeAccess().getRightParenthesisKeyword_1_1());
    }
))
;





// Entry rule entryRulePredHead
entryRulePredHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredHeadRule()); }
	 iv_rulePredHead=rulePredHead 
	 { $current=$iv_rulePredHead.current; } 
	 EOF 
;

// Rule PredHead
rulePredHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPredHeadAccess().getArgDeclArgDeclParserRuleCall_0_0()); 
	    }
		lv_argDecl_0_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredHeadRule());
	        }
       		set(
       			$current, 
       			"argDecl",
        		lv_argDecl_0_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPredHeadAccess().getSemicolonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredHeadAccess().getArgDecl2ArgDeclParserRuleCall_1_1_0()); 
	    }
		lv_argDecl2_2_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredHeadRule());
	        }
       		add(
       			$current, 
       			"argDecl2",
        		lv_argDecl2_2_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleDatatypeDecl
entryRuleDatatypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatatypeDeclRule()); }
	 iv_ruleDatatypeDecl=ruleDatatypeDecl 
	 { $current=$iv_ruleDatatypeDecl.current; } 
	 EOF 
;

// Rule DatatypeDecl
ruleDatatypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDatatypeDeclAccess().getSortParserRuleCall_0()); 
    }
    this_Sort_0=ruleSort
    { 
        $current = $this_Sort_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='::=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDatatypeDeclAccess().getColonColonEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatatypeDeclAccess().getAlternativeAlternativeParserRuleCall_2_0()); 
	    }
		lv_alternative_2_0=ruleAlternative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatatypeDeclRule());
	        }
       		set(
       			$current, 
       			"alternative",
        		lv_alternative_2_0, 
        		"Alternative");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDatatypeDeclAccess().getSemicolonKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatatypeDeclAccess().getAlternative2AlternativeParserRuleCall_3_1_0()); 
	    }
		lv_alternative2_4_0=ruleAlternative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatatypeDeclRule());
	        }
       		add(
       			$current, 
       			"alternative2",
        		lv_alternative2_4_0, 
        		"Alternative");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAlternative
entryRuleAlternative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativeRule()); }
	 iv_ruleAlternative=ruleAlternative 
	 { $current=$iv_ruleAlternative.current; } 
	 EOF 
;

// Rule Alternative
ruleAlternative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeAccess().getOpNameOpNameParserRuleCall_0_0()); 
	    }
		lv_opName_0_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_0_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeAccess().getComponentComponentParserRuleCall_1_0_0()); 
	    }
		lv_component_1_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_1_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAlternativeAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeAccess().getComponent2ComponentParserRuleCall_1_1_1_0()); 
	    }
		lv_component2_3_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeRule());
	        }
       		add(
       			$current, 
       			"component2",
        		lv_component2_3_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_4='?' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlternativeAccess().getQuestionMarkKeyword_1_2());
    }
)?)?)
;





// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getOpNameOpNameParserRuleCall_0_0_0()); 
	    }
		lv_opName_0_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_0_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getOpName2OpNameParserRuleCall_0_1_1_0()); 
	    }
		lv_opName2_2_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"opName2",
        		lv_opName2_2_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getColonKeyword_0_2());
    }
(	otherlv_4='?' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getQuestionMarkKeyword_0_3());
    }
)?)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getSortSortParserRuleCall_1_0()); 
	    }
		lv_sort_5_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_5_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	 iv_ruleVarDecl=ruleVarDecl 
	 { $current=$iv_ruleVarDecl.current; } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getVarVarParserRuleCall_0_0()); 
	    }
		lv_var_0_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_0_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getVar2VarParserRuleCall_1_1_0()); 
	    }
		lv_var2_2_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		add(
       			$current, 
       			"var2",
        		lv_var2_2_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getSortSortParserRuleCall_3_0()); 
	    }
		lv_sort_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFormula
entryRuleFormula returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaRule()); }
	 iv_ruleFormula=ruleFormula 
	 { $current=$iv_ruleFormula.current; } 
	 EOF 
;

// Rule Formula
ruleFormula returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAccess().getQuantifierQuantifierParserRuleCall_0_0_0()); 
	    }
		lv_quantifier_0_0=ruleQuantifier		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaRule());
	        }
       		set(
       			$current, 
       			"quantifier",
        		lv_quantifier_0_0, 
        		"Quantifier");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAccess().getVarDeclVarDeclParserRuleCall_0_1_0()); 
	    }
		lv_varDecl_1_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaRule());
	        }
       		set(
       			$current, 
       			"varDecl",
        		lv_varDecl_1_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFormulaAccess().getSemicolonKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAccess().getVarDecl2VarDeclParserRuleCall_0_2_1_0()); 
	    }
		lv_varDecl2_3_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaRule());
	        }
       		add(
       			$current, 
       			"varDecl2",
        		lv_varDecl2_3_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4='.' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFormulaAccess().getFullStopKeyword_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAccess().getFormulaFormulaParserRuleCall_0_4_0()); 
	    }
		lv_formula_5_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_5_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAccess().getFormulaFormulaAndParserRuleCall_1_0()); 
	    }
		lv_formula_6_0=ruleFormulaAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_6_0, 
        		"FormulaAnd");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFormulaAnd
entryRuleFormulaAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaAndRule()); }
	 iv_ruleFormulaAnd=ruleFormulaAnd 
	 { $current=$iv_ruleFormulaAnd.current; } 
	 EOF 
;

// Rule FormulaAnd
ruleFormulaAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaAndAccess().getFormulaOrParserRuleCall_0()); 
    }
    this_FormulaOr_0=ruleFormulaOr
    { 
        $current = $this_FormulaOr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaAndAccess().getFormulaAndLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'/\\' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaAndAccess().getOpSolidusReverseSolidusKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaAndRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "/\\");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAndAccess().getRightFormulaOrParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaOr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFormulaOr
entryRuleFormulaOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaOrRule()); }
	 iv_ruleFormulaOr=ruleFormulaOr 
	 { $current=$iv_ruleFormulaOr.current; } 
	 EOF 
;

// Rule FormulaOr
ruleFormulaOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaOrAccess().getFormulaImpliesParserRuleCall_0()); 
    }
    this_FormulaImplies_0=ruleFormulaImplies
    { 
        $current = $this_FormulaImplies_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaOrAccess().getFormulaOrLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'\\/' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaOrAccess().getOpReverseSolidusSolidusKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaOrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "\\/");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaOrAccess().getRightFormulaImpliesParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaImplies		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaImplies");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFormulaImplies
entryRuleFormulaImplies returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaImpliesRule()); }
	 iv_ruleFormulaImplies=ruleFormulaImplies 
	 { $current=$iv_ruleFormulaImplies.current; } 
	 EOF 
;

// Rule FormulaImplies
ruleFormulaImplies returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaImpliesAccess().getFormulaIfParserRuleCall_0()); 
    }
    this_FormulaIf_0=ruleFormulaIf
    { 
        $current = $this_FormulaIf_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaImpliesAccess().getFormulaImpliesLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'=>' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaImpliesAccess().getOpEqualsSignGreaterThanSignKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaImpliesRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "=>");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaImpliesAccess().getRightFormulaIfParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaImpliesRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaIf");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFormulaIf
entryRuleFormulaIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaIfRule()); }
	 iv_ruleFormulaIf=ruleFormulaIf 
	 { $current=$iv_ruleFormulaIf.current; } 
	 EOF 
;

// Rule FormulaIf
ruleFormulaIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaIfAccess().getFormulaEquivParserRuleCall_0()); 
    }
    this_FormulaEquiv_0=ruleFormulaEquiv
    { 
        $current = $this_FormulaEquiv_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaIfAccess().getFormulaIfLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'if' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaIfAccess().getOpIfKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaIfRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "if");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaIfAccess().getRightFormulaEquivParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaEquiv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaIfRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaEquiv");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFormulaEquiv
entryRuleFormulaEquiv returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaEquivRule()); }
	 iv_ruleFormulaEquiv=ruleFormulaEquiv 
	 { $current=$iv_ruleFormulaEquiv.current; } 
	 EOF 
;

// Rule FormulaEquiv
ruleFormulaEquiv returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaEquivAccess().getFormulaUnaryParserRuleCall_0()); 
    }
    this_FormulaUnary_0=ruleFormulaUnary
    { 
        $current = $this_FormulaUnary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaEquivAccess().getFormulaEquivLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'<=>' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaEquivAccess().getOpLessThanSignEqualsSignGreaterThanSignKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaEquivRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "<=>");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaEquivAccess().getRightFormulaUnaryParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaEquivRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaUnary");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFormulaUnary
entryRuleFormulaUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaUnaryRule()); }
	 iv_ruleFormulaUnary=ruleFormulaUnary 
	 { $current=$iv_ruleFormulaUnary.current; } 
	 EOF 
;

// Rule FormulaUnary
ruleFormulaUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getFormulaUnaryAccess().getUnaryExpressionAction_0_0(),
            $current);
    }
)(
(
		lv_uop_1_0=	'not' 
    {
        newLeafNode(lv_uop_1_0, grammarAccess.getFormulaUnaryAccess().getUopNotKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "uop", lv_uop_1_0, "not");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getExprFormulaParserRuleCall_0_2_0()); 
	    }
		lv_expr_2_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_2_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_e3_3_0=	'true' 
    {
        newLeafNode(lv_e3_3_0, grammarAccess.getFormulaUnaryAccess().getE3TrueKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_3_0, "true");
	    }

)
)
    |(
(
		lv_e3_4_0=	'false' 
    {
        newLeafNode(lv_e3_4_0, grammarAccess.getFormulaUnaryAccess().getE3FalseKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_4_0, "false");
	    }

)
)
    |((
(
		lv_e3_5_0=	'def' 
    {
        newLeafNode(lv_e3_5_0, grammarAccess.getFormulaUnaryAccess().getE3DefKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_5_0, "def");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getTTermParserRuleCall_3_1_0()); 
	    }
		lv_t_6_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_6_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getTTermParserRuleCall_4_0_0()); 
	    }
		lv_t_7_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_7_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='=e=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFormulaUnaryAccess().getEKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getT2TermParserRuleCall_4_2_0()); 
	    }
		lv_t2_9_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_9_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getTTermParserRuleCall_5_0_0()); 
	    }
		lv_t_10_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_10_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11='=' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFormulaUnaryAccess().getEqualsSignKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getT2TermParserRuleCall_5_2_0()); 
	    }
		lv_t2_12_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_12_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_e3_13_0=	'(' 
    {
        newLeafNode(lv_e3_13_0, grammarAccess.getFormulaUnaryAccess().getE3LeftParenthesisKeyword_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_13_0, "(");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getFormFormulaParserRuleCall_6_1_0()); 
	    }
		lv_form_14_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"form",
        		lv_form_14_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFormulaUnaryAccess().getRightParenthesisKeyword_6_2());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getMisfixMisfixParserRuleCall_7_0_0()); 
	    }
		lv_misfix_16_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_16_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getMisfix2MisfixParserRuleCall_7_1_0()); 
	    }
		lv_misfix2_17_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		add(
       			$current, 
       			"misfix2",
        		lv_misfix2_17_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)*))
;





// Entry rule entryRuleQuantifier
entryRuleQuantifier returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQuantifierRule()); }
	 iv_ruleQuantifier=ruleQuantifier 
	 { $current=$iv_ruleQuantifier.current; } 
	 EOF 
;

// Rule Quantifier
ruleQuantifier returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_q_0_0=	'forall' 
    {
        newLeafNode(lv_q_0_0, grammarAccess.getQuantifierAccess().getQForallKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuantifierRule());
	        }
       		setWithLastConsumed($current, "q", lv_q_0_0, "forall");
	    }

)
)
    |(
(
		lv_q_1_0=	'exists' 
    {
        newLeafNode(lv_q_1_0, grammarAccess.getQuantifierAccess().getQExistsKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuantifierRule());
	        }
       		setWithLastConsumed($current, "q", lv_q_1_0, "exists");
	    }

)
)
    |(
(
		lv_q_2_0=	'exists!' 
    {
        newLeafNode(lv_q_2_0, grammarAccess.getQuantifierAccess().getQExistsKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getQuantifierRule());
	        }
       		setWithLastConsumed($current, "q", lv_q_2_0, "exists!");
	    }

)
))
;







// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getMisfixMisfixParserRuleCall_0_0()); 
	    }
		lv_misfix_0_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_0_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getMisfix2MisfixParserRuleCall_1_0()); 
	    }
		lv_misfix2_1_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		add(
       			$current, 
       			"misfix2",
        		lv_misfix2_1_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleMisfix
entryRuleMisfix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMisfixRule()); }
	 iv_ruleMisfix=ruleMisfix 
	 { $current=$iv_ruleMisfix.current; } 
	 EOF 
;

// Rule Misfix
ruleMisfix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMisfixAccess().getMisfixWhenParserRuleCall_0()); 
    }
    this_MisfixWhen_0=ruleMisfixWhen
    { 
        $current = $this_MisfixWhen_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMisfixAccess().getMisfixLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	':' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getMisfixAccess().getOpColonKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, ":");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixAccess().getSortSortParserRuleCall_1_2_0()); 
	    }
		lv_sort_3_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_3_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMisfixWhen
entryRuleMisfixWhen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMisfixWhenRule()); }
	 iv_ruleMisfixWhen=ruleMisfixWhen 
	 { $current=$iv_ruleMisfixWhen.current; } 
	 EOF 
;

// Rule MisfixWhen
ruleMisfixWhen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMisfixWhenAccess().getMisfixUnaryParserRuleCall_0()); 
    }
    this_MisfixUnary_0=ruleMisfixUnary
    { 
        $current = $this_MisfixUnary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMisfixWhenAccess().getMisfixWhenLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'when' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getMisfixWhenAccess().getOpWhenKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixWhenRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "when");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixWhenAccess().getFormulaFormulaParserRuleCall_1_2_0()); 
	    }
		lv_formula_3_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixWhenRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_3_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_op0_4_0=	'when' 
    {
        newLeafNode(lv_op0_4_0, grammarAccess.getMisfixWhenAccess().getOp0WhenKeyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixWhenRule());
	        }
       		setWithLastConsumed($current, "op0", lv_op0_4_0, "when");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixWhenAccess().getRightMisfixUnaryParserRuleCall_1_4_0()); 
	    }
		lv_right_5_0=ruleMisfixUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixWhenRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_5_0, 
        		"MisfixUnary");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMisfixUnary
entryRuleMisfixUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMisfixUnaryRule()); }
	 iv_ruleMisfixUnary=ruleMisfixUnary 
	 { $current=$iv_ruleMisfixUnary.current; } 
	 EOF 
;

// Rule MisfixUnary
ruleMisfixUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMisfixUnaryAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getMisfixMisfixParserRuleCall_0_1_0()); 
	    }
		lv_misfix_1_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_1_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMisfixUnaryAccess().getRightParenthesisKeyword_0_2());
    }
)
    |(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMisfixUnaryAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getMisfixMisfixParserRuleCall_1_1_0()); 
	    }
		lv_misfix_4_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_4_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMisfixUnaryAccess().getRightSquareBracketKeyword_1_2());
    }
)
    |(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMisfixUnaryAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getMisfixMisfixParserRuleCall_2_1_0()); 
	    }
		lv_misfix_7_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_7_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMisfixUnaryAccess().getRightCurlyBracketKeyword_2_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp1TokenParserRuleCall_3_0()); 
	    }
		lv_op1_9_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_9_0, 
        		"Token");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp2LiteralParserRuleCall_4_0()); 
	    }
		lv_op2_10_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_10_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp3PlaceParserRuleCall_5_0()); 
	    }
		lv_op3_11_0=rulePlace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op3",
        		lv_op3_11_0, 
        		"Place");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp4QualPredNameParserRuleCall_6_0()); 
	    }
		lv_op4_12_0=ruleQualPredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op4",
        		lv_op4_12_0, 
        		"QualPredName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp5QualVarNameParserRuleCall_7_0()); 
	    }
		lv_op5_13_0=ruleQualVarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op5",
        		lv_op5_13_0, 
        		"QualVarName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp6QualOpNameParserRuleCall_8_0()); 
	    }
		lv_op6_14_0=ruleQualOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op6",
        		lv_op6_14_0, 
        		"QualOpName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_op_15_0=	'[' 
    {
        newLeafNode(lv_op_15_0, grammarAccess.getMisfixUnaryAccess().getOpLeftSquareBracketKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixUnaryRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_15_0, "[");
	    }

)
)	otherlv_16=']' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMisfixUnaryAccess().getRightSquareBracketKeyword_9_1());
    }
)
    |((
(
		lv_op_17_0=	'{' 
    {
        newLeafNode(lv_op_17_0, grammarAccess.getMisfixUnaryAccess().getOpLeftCurlyBracketKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixUnaryRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_17_0, "{");
	    }

)
)	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMisfixUnaryAccess().getRightCurlyBracketKeyword_10_1());
    }
))
;





// Entry rule entryRuleQualPredName
entryRuleQualPredName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualPredNameRule()); }
	 iv_ruleQualPredName=ruleQualPredName 
	 { $current=$iv_ruleQualPredName.current; } 
	 EOF 
;

// Rule QualPredName
ruleQualPredName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualPredNameAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualPredNameAccess().getVarKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQualPredNameAccess().getVarParserRuleCall_2()); 
    }
    this_Var_2=ruleVar
    { 
        $current = $this_Var_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualPredNameAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualPredNameAccess().getSortSortParserRuleCall_4_0()); 
	    }
		lv_sort_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualPredNameRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQualPredNameAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleQualVarName
entryRuleQualVarName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualVarNameRule()); }
	 iv_ruleQualVarName=ruleQualVarName 
	 { $current=$iv_ruleQualVarName.current; } 
	 EOF 
;

// Rule QualVarName
ruleQualVarName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualVarNameAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='pred' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualVarNameAccess().getPredKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQualVarNameAccess().getPredNameParserRuleCall_2()); 
    }
    this_PredName_2=rulePredName
    { 
        $current = $this_PredName_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualVarNameAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualVarNameAccess().getPredTypePredTypeParserRuleCall_4_0()); 
	    }
		lv_predType_4_0=rulePredType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualVarNameRule());
	        }
       		set(
       			$current, 
       			"predType",
        		lv_predType_4_0, 
        		"PredType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQualVarNameAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleQualOpName
entryRuleQualOpName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualOpNameRule()); }
	 iv_ruleQualOpName=ruleQualOpName 
	 { $current=$iv_ruleQualOpName.current; } 
	 EOF 
;

// Rule QualOpName
ruleQualOpName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualOpNameAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='op' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualOpNameAccess().getOpKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQualOpNameAccess().getOpNameParserRuleCall_2()); 
    }
    this_OpName_2=ruleOpName
    { 
        $current = $this_OpName_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualOpNameAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOpNameAccess().getOpTypeOpTypeParserRuleCall_4_0()); 
	    }
		lv_opType_4_0=ruleOpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOpNameRule());
	        }
       		set(
       			$current, 
       			"opType",
        		lv_opType_4_0, 
        		"OpType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQualOpNameAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleSort
entryRuleSort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortRule()); }
	 iv_ruleSort=ruleSort 
	 { $current=$iv_ruleSort.current; } 
	 EOF 
;

// Rule Sort
ruleSort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSortAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleOpName
entryRuleOpName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpNameRule()); }
	 iv_ruleOpName=ruleOpName 
	 { $current=$iv_ruleOpName.current; } 
	 EOF 
;

// Rule OpName
ruleOpName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getOpNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRulePredName
entryRulePredName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredNameRule()); }
	 iv_rulePredName=rulePredName 
	 { $current=$iv_rulePredName.current; } 
	 EOF 
;

// Rule PredName
rulePredName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getPredNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	 iv_ruleVar=ruleVar 
	 { $current=$iv_ruleVar.current; } 
	 EOF 
;

// Rule Var
ruleVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	 iv_ruleToken=ruleToken 
	 { $current=$iv_ruleToken.current; } 
	 EOF 
;

// Rule Token
ruleToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_num_1_0=RULE_INT
		{
			newLeafNode(lv_num_1_0, grammarAccess.getTokenAccess().getNumINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_1_0, 
        		"INT");
	    }

)
)
    |((
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTokenAccess().getFullStopKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getTTokenParserRuleCall_2_2_0()); 
	    }
		lv_t_4_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_4_0, 
        		"Token");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_str_0_0=RULE_STRING
		{
			newLeafNode(lv_str_0_0, grammarAccess.getLiteralAccess().getStrSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_0_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_num_1_0=RULE_INT
		{
			newLeafNode(lv_num_1_0, grammarAccess.getLiteralAccess().getNumINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_1_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRulePlace
entryRulePlace returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlaceRule()); } 
	 iv_rulePlace=rulePlace 
	 { $current=$iv_rulePlace.current.getText(); }  
	 EOF 
;

// Rule Place
rulePlace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='__' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPlaceAccess().get__Keyword()); 
    }

    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '%{' ( options {greedy=false;} : . )*'}%';

RULE_SL_COMMENT : '%%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


