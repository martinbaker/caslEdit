/*
* generated by Xtext
*/
grammar InternalEditor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.euclideanspace.casl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.euclideanspace.casl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.euclideanspace.casl.services.EditorGrammarAccess;

}

@parser::members {

 	private EditorGrammarAccess grammarAccess;
 	
    public InternalEditorParser(TokenStream input, EditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected EditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getBasicSpecBasicSpecParserRuleCall_0()); 
	    }
		lv_basicSpec_0_0=ruleBasicSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		set(
       			$current, 
       			"basicSpec",
        		lv_basicSpec_0_0, 
        		"BasicSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBasicSpec
entryRuleBasicSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicSpecRule()); }
	 iv_ruleBasicSpec=ruleBasicSpec 
	 { $current=$iv_ruleBasicSpec.current; } 
	 EOF 
;

// Rule BasicSpec
ruleBasicSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(	otherlv_1='%implies' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBasicSpecAccess().getImpliesKeyword_0_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(	otherlv_2='library' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBasicSpecAccess().getLibraryKeyword_0_1_0());
    }
(
(
		lv_name1_3_0=RULE_ID
		{
			newLeafNode(lv_name1_3_0, grammarAccess.getBasicSpecAccess().getName1IDTerminalRuleCall_0_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name1",
        		lv_name1_3_0, 
        		"ID");
	    }

)
)(	otherlv_4='/' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBasicSpecAccess().getSolidusKeyword_0_1_2_0());
    }
(
(
		lv_name2_5_0=RULE_ID
		{
			newLeafNode(lv_name2_5_0, grammarAccess.getBasicSpecAccess().getName2IDTerminalRuleCall_0_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name2",
        		lv_name2_5_0, 
        		"ID");
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 2);
	 				}
					({true}?=>(	otherlv_6='version' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBasicSpecAccess().getVersionKeyword_0_2_0());
    }
(
(
		lv_name3_7_0=RULE_INT
		{
			newLeafNode(lv_name3_7_0, grammarAccess.getBasicSpecAccess().getName3INTTerminalRuleCall_0_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name3",
        		lv_name3_7_0, 
        		"INT");
	    }

)
)(	otherlv_8='.' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBasicSpecAccess().getFullStopKeyword_0_2_2_0());
    }
(
(
		lv_name4_9_0=RULE_INT
		{
			newLeafNode(lv_name4_9_0, grammarAccess.getBasicSpecAccess().getName4INTTerminalRuleCall_0_2_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name4",
        		lv_name4_9_0, 
        		"INT");
	    }

)
))*))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 3);
	 				}
					({true}?=>(this_AUTHORS_10=RULE_AUTHORS
    { 
    newLeafNode(this_AUTHORS_10, grammarAccess.getBasicSpecAccess().getAUTHORSTerminalRuleCall_0_3()); 
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 4)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 4);
	 				}
					({true}?=>(this_DATE_11=RULE_DATE
    { 
    newLeafNode(this_DATE_11, grammarAccess.getBasicSpecAccess().getDATETerminalRuleCall_0_4()); 
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 5)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 5);
	 				}
					({true}?=>(this_DISPLAY_12=RULE_DISPLAY
    { 
    newLeafNode(this_DISPLAY_12, grammarAccess.getBasicSpecAccess().getDISPLAYTerminalRuleCall_0_5()); 
    }
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 6)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 6);
	 				}
					({true}?=>(this_LEFTASSOC_13=RULE_LEFTASSOC
    { 
    newLeafNode(this_LEFTASSOC_13, grammarAccess.getBasicSpecAccess().getLEFTASSOCTerminalRuleCall_0_6()); 
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 7)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 7);
	 				}
					({true}?=>(this_NUMBER_14=RULE_NUMBER
    { 
    newLeafNode(this_NUMBER_14, grammarAccess.getBasicSpecAccess().getNUMBERTerminalRuleCall_0_7()); 
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 8)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 8);
	 				}
					({true}?=>(this_FLOATING_15=RULE_FLOATING
    { 
    newLeafNode(this_FLOATING_15, grammarAccess.getBasicSpecAccess().getFLOATINGTerminalRuleCall_0_8()); 
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 9)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 9);
	 				}
					({true}?=>(this_PREC1_16=RULE_PREC1
    { 
    newLeafNode(this_PREC1_16, grammarAccess.getBasicSpecAccess().getPREC1TerminalRuleCall_0_9()); 
    }
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 10)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0(), 10);
	 				}
					({true}?=>(this_PREC_17=RULE_PREC
    { 
    newLeafNode(this_PREC_17, grammarAccess.getBasicSpecAccess().getPRECTerminalRuleCall_0_10()); 
    }
))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getBasicSpecAccess().getUnorderedGroup_0());
	}

)	otherlv_18='spec' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBasicSpecAccess().getSpecKeyword_1());
    }
(
(
		lv_name_19_0=RULE_ID
		{
			newLeafNode(lv_name_19_0, grammarAccess.getBasicSpecAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_19_0, 
        		"ID");
	    }

)
)	otherlv_20='=' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getBasicSpecAccess().getEqualsSignKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicSpecAccess().getBasicItemsBasicItemsParserRuleCall_4_0_0()); 
	    }
		lv_basicItems_21_0=ruleBasicItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicSpecRule());
	        }
       		add(
       			$current, 
       			"basicItems",
        		lv_basicItems_21_0, 
        		"BasicItems");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    |((
(
		lv_empty_22_0=	'{' 
    {
        newLeafNode(lv_empty_22_0, grammarAccess.getBasicSpecAccess().getEmptyLeftCurlyBracketKeyword_4_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBasicSpecRule());
	        }
       		setWithLastConsumed($current, "empty", lv_empty_22_0, "{");
	    }

)
)	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getBasicSpecAccess().getRightCurlyBracketKeyword_4_1_1());
    }
)))
;





// Entry rule entryRuleBasicItems
entryRuleBasicItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBasicItemsRule()); }
	 iv_ruleBasicItems=ruleBasicItems 
	 { $current=$iv_ruleBasicItems.current; } 
	 EOF 
;

// Rule BasicItems
ruleBasicItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(	otherlv_1='%mono' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBasicItemsAccess().getMonoKeyword_0_0());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(	otherlv_2='%implies' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBasicItemsAccess().getImpliesKeyword_0_1());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getBasicItemsAccess().getUnorderedGroup_0());
	}

)((
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getSSigItemsParserRuleCall_1_0_0()); 
	    }
		lv_s_3_0=ruleSigItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"s",
        		lv_s_3_0, 
        		"SigItems");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(((	'free' 
(	'type' 

    |	'types' 
)(
(
ruleDatatypeDecl
)
)(	';' 
(
(
ruleDatatypeDecl
)
))*(	';' 
)?))=>(	otherlv_4='free' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBasicItemsAccess().getFreeKeyword_1_1_0_0());
    }
(	otherlv_5='type' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBasicItemsAccess().getTypeKeyword_1_1_0_1_0());
    }

    |	otherlv_6='types' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getBasicItemsAccess().getTypesKeyword_1_1_0_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDeclDatatypeDeclParserRuleCall_1_1_0_2_0()); 
	    }
		lv_datatypeDecl_7_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"datatypeDecl",
        		lv_datatypeDecl_7_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_1_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDecl2DatatypeDeclParserRuleCall_1_1_0_3_1_0()); 
	    }
		lv_datatypeDecl2_9_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"datatypeDecl2",
        		lv_datatypeDecl2_9_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_1_0_4());
    }
)?))
    |(	otherlv_11='generated' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBasicItemsAccess().getGeneratedKeyword_1_2_0());
    }
(	otherlv_12='type' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBasicItemsAccess().getTypeKeyword_1_2_1_0());
    }

    |	otherlv_13='types' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBasicItemsAccess().getTypesKeyword_1_2_1_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDeclDatatypeDeclParserRuleCall_1_2_2_0()); 
	    }
		lv_datatypeDecl_14_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"datatypeDecl",
        		lv_datatypeDecl_14_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getDatatypeDecl2DatatypeDeclParserRuleCall_1_2_3_1_0()); 
	    }
		lv_datatypeDecl2_16_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"datatypeDecl2",
        		lv_datatypeDecl2_16_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_2_4());
    }
)?)
    |(	otherlv_18='generated' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getBasicItemsAccess().getGeneratedKeyword_1_3_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getBasicItemsAccess().getLeftCurlyBracketKeyword_1_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getS2SigItemsParserRuleCall_1_3_2_0()); 
	    }
		lv_s2_20_0=ruleSigItems		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"s2",
        		lv_s2_20_0, 
        		"SigItems");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getBasicItemsAccess().getRightCurlyBracketKeyword_1_3_3());
    }
(	otherlv_22=';' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_3_4());
    }
)?)
    |((	otherlv_23='var' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getBasicItemsAccess().getVarKeyword_1_4_0_0());
    }

    |	otherlv_24='vars' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getBasicItemsAccess().getVarsKeyword_1_4_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDeclVarDeclParserRuleCall_1_4_1_0()); 
	    }
		lv_varDecl_25_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"varDecl",
        		lv_varDecl_25_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=';' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDecl2VarDeclParserRuleCall_1_4_2_1_0()); 
	    }
		lv_varDecl2_27_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"varDecl2",
        		lv_varDecl2_27_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_28=';' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_4_3());
    }
)?)
    |(	otherlv_29='forall' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getBasicItemsAccess().getForallKeyword_1_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDeclVarDeclParserRuleCall_1_5_1_0()); 
	    }
		lv_varDecl_30_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"varDecl",
        		lv_varDecl_30_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_31=';' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getVarDecl2VarDeclParserRuleCall_1_5_2_1_0()); 
	    }
		lv_varDecl2_32_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"varDecl2",
        		lv_varDecl2_32_0, 
        		"VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_33='.' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getBasicItemsAccess().getFullStopKeyword_1_5_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getFormulaFormulaParserRuleCall_1_5_4_0()); 
	    }
		lv_formula_34_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_34_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_35=';' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_5_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBasicItemsAccess().getFormula2FormulaParserRuleCall_1_5_5_1_0()); 
	    }
		lv_formula2_36_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBasicItemsRule());
	        }
       		add(
       			$current, 
       			"formula2",
        		lv_formula2_36_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_37=';' 
    {
    	newLeafNode(otherlv_37, grammarAccess.getBasicItemsAccess().getSemicolonKeyword_1_5_6());
    }
)?)))
;





// Entry rule entryRuleSigItems
entryRuleSigItems returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSigItemsRule()); }
	 iv_ruleSigItems=ruleSigItems 
	 { $current=$iv_ruleSigItems.current; } 
	 EOF 
;

// Rule SigItems
ruleSigItems returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='sort' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSigItemsAccess().getSortKeyword_0_0_0());
    }

    |	otherlv_1='sorts' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSigItemsAccess().getSortsKeyword_0_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getSortItemSortItemParserRuleCall_0_1_0()); 
	    }
		lv_sortItem_2_0=ruleSortItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"sortItem",
        		lv_sortItem_2_0, 
        		"SortItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSigItemsAccess().getSemicolonKeyword_0_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getSortItem2SortItemParserRuleCall_0_2_1_0()); 
	    }
		lv_sortItem2_4_0=ruleSortItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"sortItem2",
        		lv_sortItem2_4_0, 
        		"SortItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSigItemsAccess().getSemicolonKeyword_0_3());
    }
)?)
    |((	otherlv_6='op' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSigItemsAccess().getOpKeyword_1_0_0());
    }

    |	otherlv_7='ops' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSigItemsAccess().getOpsKeyword_1_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getOpItemOpItemParserRuleCall_1_1_0()); 
	    }
		lv_opItem_8_0=ruleOpItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"opItem",
        		lv_opItem_8_0, 
        		"OpItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSigItemsAccess().getSemicolonKeyword_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getOpItem2OpItemParserRuleCall_1_2_1_0()); 
	    }
		lv_opItem2_10_0=ruleOpItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"opItem2",
        		lv_opItem2_10_0, 
        		"OpItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSigItemsAccess().getSemicolonKeyword_1_3());
    }
)?)
    |((	otherlv_12='pred' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSigItemsAccess().getPredKeyword_2_0_0());
    }

    |	otherlv_13='preds' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSigItemsAccess().getPredsKeyword_2_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getPredItemPredItemParserRuleCall_2_1_0()); 
	    }
		lv_predItem_14_0=rulePredItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"predItem",
        		lv_predItem_14_0, 
        		"PredItem");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSigItemsAccess().getSemicolonKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getPredItem2PredItemParserRuleCall_2_2_1_0()); 
	    }
		lv_predItem2_16_0=rulePredItem		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"predItem2",
        		lv_predItem2_16_0, 
        		"PredItem");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSigItemsAccess().getSemicolonKeyword_2_3());
    }
)?)
    |((	otherlv_18='type' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSigItemsAccess().getTypeKeyword_3_0_0());
    }

    |	otherlv_19='types' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSigItemsAccess().getTypesKeyword_3_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getDatatypeDeclDatatypeDeclParserRuleCall_3_1_0()); 
	    }
		lv_datatypeDecl_20_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		set(
       			$current, 
       			"datatypeDecl",
        		lv_datatypeDecl_20_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSigItemsAccess().getSemicolonKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSigItemsAccess().getDatatypeDecl2DatatypeDeclParserRuleCall_3_2_1_0()); 
	    }
		lv_datatypeDecl2_22_0=ruleDatatypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSigItemsRule());
	        }
       		add(
       			$current, 
       			"datatypeDecl2",
        		lv_datatypeDecl2_22_0, 
        		"DatatypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getSigItemsAccess().getSemicolonKeyword_3_3());
    }
)?))
;





// Entry rule entryRuleSortItem
entryRuleSortItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortItemRule()); }
	 iv_ruleSortItem=ruleSortItem 
	 { $current=$iv_ruleSortItem.current; } 
	 EOF 
;

// Rule SortItem
ruleSortItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='%implies' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSortItemAccess().getImpliesKeyword_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSortItemAccess().getSortSortParserRuleCall_1_0()); 
	    }
		lv_sort_1_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortItemRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_1_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSortItemAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSortItemAccess().getSort2SortParserRuleCall_2_1_0()); 
	    }
		lv_sort2_3_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSortItemRule());
	        }
       		add(
       			$current, 
       			"sort2",
        		lv_sort2_3_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOpItem
entryRuleOpItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpItemRule()); }
	 iv_ruleOpItem=ruleOpItem 
	 { $current=$iv_ruleOpItem.current; } 
	 EOF 
;

// Rule OpItem
ruleOpItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='%implies' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpItemAccess().getImpliesKeyword_0());
    }
)?(((
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpNameOpNameParserRuleCall_1_0_0_0()); 
	    }
		lv_opName_1_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_1_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOpItemAccess().getCommaKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpName2OpNameParserRuleCall_1_0_1_1_0()); 
	    }
		lv_opName2_3_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		add(
       			$current, 
       			"opName2",
        		lv_opName2_3_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOpItemAccess().getColonKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpTypeOpTypeParserRuleCall_1_0_3_0()); 
	    }
		lv_opType_5_0=ruleOpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opType",
        		lv_opType_5_0, 
        		"OpType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOpItemAccess().getCommaKeyword_1_0_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpAttrOpAttrParserRuleCall_1_0_4_1_0()); 
	    }
		lv_opAttr_7_0=ruleOpAttr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		add(
       			$current, 
       			"opAttr",
        		lv_opAttr_7_0, 
        		"OpAttr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpNameOpNameParserRuleCall_1_1_0_0()); 
	    }
		lv_opName_8_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_8_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getOpHeadOpHeadParserRuleCall_1_1_1_0()); 
	    }
		lv_opHead_9_0=ruleOpHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"opHead",
        		lv_opHead_9_0, 
        		"OpHead");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getOpItemAccess().getEqualsSignKeyword_1_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpItemAccess().getTermTermParserRuleCall_1_1_3_0()); 
	    }
		lv_term_11_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpItemRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_11_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleOpType
entryRuleOpType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpTypeRule()); }
	 iv_ruleOpType=ruleOpType 
	 { $current=$iv_ruleOpType.current; } 
	 EOF 
;

// Rule OpType
ruleOpType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='?' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpTypeAccess().getQuestionMarkKeyword_0_0());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSortSortParserRuleCall_0_1_0()); 
	    }
		lv_sort_1_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_1_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSortSortParserRuleCall_1_0_0()); 
	    }
		lv_sort_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOpTypeAccess().getAsteriskKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSort2SortParserRuleCall_1_1_1_0()); 
	    }
		lv_sort2_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		add(
       			$current, 
       			"sort2",
        		lv_sort2_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5='->' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOpTypeAccess().getHyphenMinusGreaterThanSignKeyword_1_2());
    }
(	otherlv_6='?' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOpTypeAccess().getQuestionMarkKeyword_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpTypeAccess().getSort3SortParserRuleCall_1_4_0()); 
	    }
		lv_sort3_7_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpTypeRule());
	        }
       		set(
       			$current, 
       			"sort3",
        		lv_sort3_7_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOpAttr
entryRuleOpAttr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpAttrRule()); }
	 iv_ruleOpAttr=ruleOpAttr 
	 { $current=$iv_ruleOpAttr.current; } 
	 EOF 
;

// Rule OpAttr
ruleOpAttr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_op_0_0=	'assoc' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getOpAttrAccess().getOpAssocKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "assoc");
	    }

)
)
    |(
(
		lv_op_1_0=	'comm' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getOpAttrAccess().getOpCommKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "comm");
	    }

)
)
    |(
(
		lv_op_2_0=	'idem' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getOpAttrAccess().getOpIdemKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "idem");
	    }

)
)
    |((
(
		lv_op_3_0=	'unit' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getOpAttrAccess().getOpUnitKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpAttrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "unit");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpAttrAccess().getTermTermParserRuleCall_3_1_0()); 
	    }
		lv_term_4_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpAttrRule());
	        }
       		set(
       			$current, 
       			"term",
        		lv_term_4_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleOpHead
entryRuleOpHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpHeadRule()); }
	 iv_ruleOpHead=ruleOpHead 
	 { $current=$iv_ruleOpHead.current; } 
	 EOF 
;

// Rule OpHead
ruleOpHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOpHeadAccess().getColonKeyword_0_0());
    }
(	otherlv_1='?' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOpHeadAccess().getQuestionMarkKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getSortSortParserRuleCall_0_2_0()); 
	    }
		lv_sort_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getArgDeclArgDeclParserRuleCall_1_0_0()); 
	    }
		lv_argDecl_3_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		set(
       			$current, 
       			"argDecl",
        		lv_argDecl_3_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOpHeadAccess().getSemicolonKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getArgDecl2ArgDeclParserRuleCall_1_1_1_0()); 
	    }
		lv_argDecl2_5_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		add(
       			$current, 
       			"argDecl2",
        		lv_argDecl2_5_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=':' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOpHeadAccess().getColonKeyword_1_2());
    }
(	otherlv_7='?' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOpHeadAccess().getQuestionMarkKeyword_1_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpHeadAccess().getSortSortParserRuleCall_1_4_0()); 
	    }
		lv_sort_8_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpHeadRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_8_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleArgDecl
entryRuleArgDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgDeclRule()); }
	 iv_ruleArgDecl=ruleArgDecl 
	 { $current=$iv_ruleArgDecl.current; } 
	 EOF 
;

// Rule ArgDecl
ruleArgDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getArgDeclAccess().getVarVarParserRuleCall_0_0()); 
	    }
		lv_var_0_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgDeclRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_0_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArgDeclAccess().getSemicolonKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgDeclAccess().getVar2VarParserRuleCall_1_1_0()); 
	    }
		lv_var2_2_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgDeclRule());
	        }
       		add(
       			$current, 
       			"var2",
        		lv_var2_2_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArgDeclAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgDeclAccess().getSortSortParserRuleCall_3_0()); 
	    }
		lv_sort_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgDeclRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePredItem
entryRulePredItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredItemRule()); }
	 iv_rulePredItem=rulePredItem 
	 { $current=$iv_rulePredItem.current; } 
	 EOF 
;

// Rule PredItem
rulePredItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='%implies' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPredItemAccess().getImpliesKeyword_0());
    }
)?(((
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredNamePredNameParserRuleCall_1_0_0_0()); 
	    }
		lv_predName_1_0=rulePredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"predName",
        		lv_predName_1_0, 
        		"PredName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPredItemAccess().getCommaKeyword_1_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredName2PredNameParserRuleCall_1_0_1_1_0()); 
	    }
		lv_predName2_3_0=rulePredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		add(
       			$current, 
       			"predName2",
        		lv_predName2_3_0, 
        		"PredName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredItemAccess().getColonKeyword_1_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredTypePredTypeParserRuleCall_1_0_3_0()); 
	    }
		lv_predType_5_0=rulePredType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		add(
       			$current, 
       			"predType",
        		lv_predType_5_0, 
        		"PredType");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredNamePredNameParserRuleCall_1_1_0_0()); 
	    }
		lv_predName_6_0=rulePredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"predName",
        		lv_predName_6_0, 
        		"PredName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getPredHeadPredHeadParserRuleCall_1_1_1_0()); 
	    }
		lv_predHead_7_0=rulePredHead		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"predHead",
        		lv_predHead_7_0, 
        		"PredHead");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8='<=>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPredItemAccess().getLessThanSignEqualsSignGreaterThanSignKeyword_1_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredItemAccess().getFormulaFormulaParserRuleCall_1_1_3_0()); 
	    }
		lv_formula_9_0=ruleFormula		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredItemRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_9_0, 
        		"Formula");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRulePredType
entryRulePredType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredTypeRule()); }
	 iv_rulePredType=rulePredType 
	 { $current=$iv_rulePredType.current; } 
	 EOF 
;

// Rule PredType
rulePredType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getPredTypeAccess().getSortSortParserRuleCall_0_0_0()); 
	    }
		lv_sort_0_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredTypeRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_0_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='*' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPredTypeAccess().getAsteriskKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredTypeAccess().getSort2SortParserRuleCall_0_1_1_0()); 
	    }
		lv_sort2_2_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredTypeRule());
	        }
       		add(
       			$current, 
       			"sort2",
        		lv_sort2_2_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
(
		lv_b_3_0=	'(' 
    {
        newLeafNode(lv_b_3_0, grammarAccess.getPredTypeAccess().getBLeftParenthesisKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredTypeRule());
	        }
       		setWithLastConsumed($current, "b", lv_b_3_0, "(");
	    }

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredTypeAccess().getRightParenthesisKeyword_1_1());
    }
))
;





// Entry rule entryRulePredHead
entryRulePredHead returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredHeadRule()); }
	 iv_rulePredHead=rulePredHead 
	 { $current=$iv_rulePredHead.current; } 
	 EOF 
;

// Rule PredHead
rulePredHead returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPredHeadAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredHeadAccess().getArgDeclArgDeclParserRuleCall_1_0()); 
	    }
		lv_argDecl_1_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredHeadRule());
	        }
       		set(
       			$current, 
       			"argDecl",
        		lv_argDecl_1_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPredHeadAccess().getSemicolonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredHeadAccess().getArgDecl2ArgDeclParserRuleCall_2_1_0()); 
	    }
		lv_argDecl2_3_0=ruleArgDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredHeadRule());
	        }
       		add(
       			$current, 
       			"argDecl2",
        		lv_argDecl2_3_0, 
        		"ArgDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredHeadAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleDatatypeDecl
entryRuleDatatypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDatatypeDeclRule()); }
	 iv_ruleDatatypeDecl=ruleDatatypeDecl 
	 { $current=$iv_ruleDatatypeDecl.current; } 
	 EOF 
;

// Rule DatatypeDecl
ruleDatatypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDatatypeDeclAccess().getSortParserRuleCall_0()); 
    }
    this_Sort_0=ruleSort
    { 
        $current = $this_Sort_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='::=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDatatypeDeclAccess().getColonColonEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatatypeDeclAccess().getAlternativeAlternativeParserRuleCall_2_0()); 
	    }
		lv_alternative_2_0=ruleAlternative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatatypeDeclRule());
	        }
       		set(
       			$current, 
       			"alternative",
        		lv_alternative_2_0, 
        		"Alternative");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='|' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDatatypeDeclAccess().getVerticalLineKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDatatypeDeclAccess().getAlternative2AlternativeParserRuleCall_3_1_0()); 
	    }
		lv_alternative2_4_0=ruleAlternative		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDatatypeDeclRule());
	        }
       		add(
       			$current, 
       			"alternative2",
        		lv_alternative2_4_0, 
        		"Alternative");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAlternative
entryRuleAlternative returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAlternativeRule()); }
	 iv_ruleAlternative=ruleAlternative 
	 { $current=$iv_ruleAlternative.current; } 
	 EOF 
;

// Rule Alternative
ruleAlternative returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeAccess().getOpNameOpNameParserRuleCall_0_0()); 
	    }
		lv_opName_0_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_0_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAlternativeAccess().getLeftParenthesisKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAlternativeAccess().getComponentComponentParserRuleCall_1_1_0()); 
	    }
		lv_component_2_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAlternativeRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_2_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAlternativeAccess().getRightParenthesisKeyword_1_2());
    }
(	otherlv_4='?' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAlternativeAccess().getQuestionMarkKeyword_1_3());
    }
)?)?)
;





// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getOpNameOpNameParserRuleCall_0_0_0()); 
	    }
		lv_opName_0_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"opName",
        		lv_opName_0_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getCommaKeyword_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getOpName2OpNameParserRuleCall_0_1_1_0()); 
	    }
		lv_opName2_2_0=ruleOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		add(
       			$current, 
       			"opName2",
        		lv_opName2_2_0, 
        		"OpName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getColonKeyword_0_2());
    }
(	otherlv_4='?' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getQuestionMarkKeyword_0_3());
    }
)?)(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentAccess().getSortSortParserRuleCall_1_0()); 
	    }
		lv_sort_5_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_5_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	 iv_ruleVarDecl=ruleVarDecl 
	 { $current=$iv_ruleVarDecl.current; } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getVarVarParserRuleCall_0_0()); 
	    }
		lv_var_0_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		set(
       			$current, 
       			"var",
        		lv_var_0_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getVar2VarParserRuleCall_1_1_0()); 
	    }
		lv_var2_2_0=ruleVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		add(
       			$current, 
       			"var2",
        		lv_var2_2_0, 
        		"Var");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getVarDeclAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getSortSortParserRuleCall_3_0()); 
	    }
		lv_sort_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFormula
entryRuleFormula returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaRule()); }
	 iv_ruleFormula=ruleFormula 
	 { $current=$iv_ruleFormula.current; } 
	 EOF 
;

// Rule Formula
ruleFormula returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAccess().getFormulaFormulaAndParserRuleCall_0()); 
	    }
		lv_formula_0_0=ruleFormulaAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaRule());
	        }
       		set(
       			$current, 
       			"formula",
        		lv_formula_0_0, 
        		"FormulaAnd");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleFormulaAnd
entryRuleFormulaAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaAndRule()); }
	 iv_ruleFormulaAnd=ruleFormulaAnd 
	 { $current=$iv_ruleFormulaAnd.current; } 
	 EOF 
;

// Rule FormulaAnd
ruleFormulaAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaAndAccess().getFormulaOrParserRuleCall_0()); 
    }
    this_FormulaOr_0=ruleFormulaOr
    { 
        $current = $this_FormulaOr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaAndAccess().getFormulaAndLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'/\\' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaAndAccess().getOpSolidusReverseSolidusKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaAndRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "/\\");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaAndAccess().getRightFormulaOrParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaAndRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaOr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFormulaOr
entryRuleFormulaOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaOrRule()); }
	 iv_ruleFormulaOr=ruleFormulaOr 
	 { $current=$iv_ruleFormulaOr.current; } 
	 EOF 
;

// Rule FormulaOr
ruleFormulaOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaOrAccess().getFormulaImpliesParserRuleCall_0()); 
    }
    this_FormulaImplies_0=ruleFormulaImplies
    { 
        $current = $this_FormulaImplies_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaOrAccess().getFormulaOrLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'\\/' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaOrAccess().getOpReverseSolidusSolidusKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaOrRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "\\/");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaOrAccess().getRightFormulaImpliesParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaImplies		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaOrRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaImplies");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleFormulaImplies
entryRuleFormulaImplies returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaImpliesRule()); }
	 iv_ruleFormulaImplies=ruleFormulaImplies 
	 { $current=$iv_ruleFormulaImplies.current; } 
	 EOF 
;

// Rule FormulaImplies
ruleFormulaImplies returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaImpliesAccess().getFormulaIfParserRuleCall_0()); 
    }
    this_FormulaIf_0=ruleFormulaIf
    { 
        $current = $this_FormulaIf_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaImpliesAccess().getFormulaImpliesLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'=>' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaImpliesAccess().getOpEqualsSignGreaterThanSignKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaImpliesRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "=>");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaImpliesAccess().getRightFormulaIfParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaImpliesRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaIf");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFormulaIf
entryRuleFormulaIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaIfRule()); }
	 iv_ruleFormulaIf=ruleFormulaIf 
	 { $current=$iv_ruleFormulaIf.current; } 
	 EOF 
;

// Rule FormulaIf
ruleFormulaIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaIfAccess().getFormulaEquivParserRuleCall_0()); 
    }
    this_FormulaEquiv_0=ruleFormulaEquiv
    { 
        $current = $this_FormulaEquiv_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaIfAccess().getFormulaIfLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'if' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaIfAccess().getOpIfKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaIfRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "if");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaIfAccess().getRightFormulaEquivParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaEquiv		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaIfRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaEquiv");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFormulaEquiv
entryRuleFormulaEquiv returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaEquivRule()); }
	 iv_ruleFormulaEquiv=ruleFormulaEquiv 
	 { $current=$iv_ruleFormulaEquiv.current; } 
	 EOF 
;

// Rule FormulaEquiv
ruleFormulaEquiv returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFormulaEquivAccess().getFormulaUnaryParserRuleCall_0()); 
    }
    this_FormulaUnary_0=ruleFormulaUnary
    { 
        $current = $this_FormulaUnary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getFormulaEquivAccess().getFormulaEquivLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	'<=>' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getFormulaEquivAccess().getOpLessThanSignEqualsSignGreaterThanSignKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaEquivRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "<=>");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaEquivAccess().getRightFormulaUnaryParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleFormulaUnary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaEquivRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"FormulaUnary");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFormulaUnary
entryRuleFormulaUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormulaUnaryRule()); }
	 iv_ruleFormulaUnary=ruleFormulaUnary 
	 { $current=$iv_ruleFormulaUnary.current; } 
	 EOF 
;

// Rule FormulaUnary
ruleFormulaUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_e3_0_0=	'true' 
    {
        newLeafNode(lv_e3_0_0, grammarAccess.getFormulaUnaryAccess().getE3TrueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_0_0, "true");
	    }

)
)
    |(
(
		lv_e3_1_0=	'false' 
    {
        newLeafNode(lv_e3_1_0, grammarAccess.getFormulaUnaryAccess().getE3FalseKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_1_0, "false");
	    }

)
)
    |((
(
		lv_e3_2_0=	'def' 
    {
        newLeafNode(lv_e3_2_0, grammarAccess.getFormulaUnaryAccess().getE3DefKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_2_0, "def");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getTTermParserRuleCall_2_1_0()); 
	    }
		lv_t_3_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_3_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getTTermParserRuleCall_3_0_0()); 
	    }
		lv_t_4_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_4_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_e3_5_0=	'=e=' 
    {
        newLeafNode(lv_e3_5_0, grammarAccess.getFormulaUnaryAccess().getE3EKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormulaUnaryRule());
	        }
       		setWithLastConsumed($current, "e3", lv_e3_5_0, "=e=");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormulaUnaryAccess().getT2TermParserRuleCall_3_2_0()); 
	    }
		lv_t2_6_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormulaUnaryRule());
	        }
       		set(
       			$current, 
       			"t2",
        		lv_t2_6_0, 
        		"Term");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;









// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getMisfixMisfixParserRuleCall_0_0()); 
	    }
		lv_misfix_0_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_0_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getMisfix2MisfixParserRuleCall_1_0()); 
	    }
		lv_misfix2_1_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		add(
       			$current, 
       			"misfix2",
        		lv_misfix2_1_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleMisfix
entryRuleMisfix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMisfixRule()); }
	 iv_ruleMisfix=ruleMisfix 
	 { $current=$iv_ruleMisfix.current; } 
	 EOF 
;

// Rule Misfix
ruleMisfix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMisfixAccess().getMisfixWhenParserRuleCall_0()); 
    }
    this_MisfixWhen_0=ruleMisfixWhen
    { 
        $current = $this_MisfixWhen_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMisfixAccess().getMisfixLeftAction_1_0(),
            $current);
    }
)(
(
		lv_op_2_0=	':' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getMisfixAccess().getOpColonKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, ":");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixAccess().getSortSortParserRuleCall_1_2_0()); 
	    }
		lv_sort_3_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_3_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleMisfixWhen
entryRuleMisfixWhen returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMisfixWhenRule()); }
	 iv_ruleMisfixWhen=ruleMisfixWhen 
	 { $current=$iv_ruleMisfixWhen.current; } 
	 EOF 
;

// Rule MisfixWhen
ruleMisfixWhen returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getMisfixWhenAccess().getMisfixUnaryParserRuleCall()); 
    }
    this_MisfixUnary_0=ruleMisfixUnary
    { 
        $current = $this_MisfixUnary_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleMisfixUnary
entryRuleMisfixUnary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMisfixUnaryRule()); }
	 iv_ruleMisfixUnary=ruleMisfixUnary 
	 { $current=$iv_ruleMisfixUnary.current; } 
	 EOF 
;

// Rule MisfixUnary
ruleMisfixUnary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMisfixUnaryAccess().getLeftParenthesisKeyword_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getMisfixMisfixParserRuleCall_0_1_0()); 
	    }
		lv_misfix_1_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_1_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMisfixUnaryAccess().getRightParenthesisKeyword_0_2());
    }
)
    |(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMisfixUnaryAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getMisfixMisfixParserRuleCall_1_1_0()); 
	    }
		lv_misfix_4_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_4_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMisfixUnaryAccess().getRightSquareBracketKeyword_1_2());
    }
)
    |(	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMisfixUnaryAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getMisfixMisfixParserRuleCall_2_1_0()); 
	    }
		lv_misfix_7_0=ruleMisfix		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"misfix",
        		lv_misfix_7_0, 
        		"Misfix");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMisfixUnaryAccess().getRightCurlyBracketKeyword_2_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp1TokenParserRuleCall_3_0()); 
	    }
		lv_op1_9_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op1",
        		lv_op1_9_0, 
        		"Token");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp2LiteralParserRuleCall_4_0()); 
	    }
		lv_op2_10_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op2",
        		lv_op2_10_0, 
        		"Literal");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp3PlaceParserRuleCall_5_0()); 
	    }
		lv_op3_11_0=rulePlace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op3",
        		lv_op3_11_0, 
        		"Place");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp4QualPredNameParserRuleCall_6_0()); 
	    }
		lv_op4_12_0=ruleQualPredName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op4",
        		lv_op4_12_0, 
        		"QualPredName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp5QualVarNameParserRuleCall_7_0()); 
	    }
		lv_op5_13_0=ruleQualVarName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op5",
        		lv_op5_13_0, 
        		"QualVarName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMisfixUnaryAccess().getOp6QualOpNameParserRuleCall_8_0()); 
	    }
		lv_op6_14_0=ruleQualOpName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMisfixUnaryRule());
	        }
       		set(
       			$current, 
       			"op6",
        		lv_op6_14_0, 
        		"QualOpName");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_op_15_0=	'[' 
    {
        newLeafNode(lv_op_15_0, grammarAccess.getMisfixUnaryAccess().getOpLeftSquareBracketKeyword_9_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixUnaryRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_15_0, "[");
	    }

)
)	otherlv_16=']' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMisfixUnaryAccess().getRightSquareBracketKeyword_9_1());
    }
)
    |((
(
		lv_op_17_0=	'{' 
    {
        newLeafNode(lv_op_17_0, grammarAccess.getMisfixUnaryAccess().getOpLeftCurlyBracketKeyword_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMisfixUnaryRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_17_0, "{");
	    }

)
)	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMisfixUnaryAccess().getRightCurlyBracketKeyword_10_1());
    }
))
;





// Entry rule entryRuleQualPredName
entryRuleQualPredName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualPredNameRule()); }
	 iv_ruleQualPredName=ruleQualPredName 
	 { $current=$iv_ruleQualPredName.current; } 
	 EOF 
;

// Rule QualPredName
ruleQualPredName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualPredNameAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualPredNameAccess().getVarKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQualPredNameAccess().getVarParserRuleCall_2()); 
    }
    this_Var_2=ruleVar
    { 
        $current = $this_Var_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualPredNameAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualPredNameAccess().getSortSortParserRuleCall_4_0()); 
	    }
		lv_sort_4_0=ruleSort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualPredNameRule());
	        }
       		set(
       			$current, 
       			"sort",
        		lv_sort_4_0, 
        		"Sort");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQualPredNameAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleQualVarName
entryRuleQualVarName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualVarNameRule()); }
	 iv_ruleQualVarName=ruleQualVarName 
	 { $current=$iv_ruleQualVarName.current; } 
	 EOF 
;

// Rule QualVarName
ruleQualVarName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualVarNameAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='pred' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualVarNameAccess().getPredKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQualVarNameAccess().getPredNameParserRuleCall_2()); 
    }
    this_PredName_2=rulePredName
    { 
        $current = $this_PredName_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualVarNameAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualVarNameAccess().getPredTypePredTypeParserRuleCall_4_0()); 
	    }
		lv_predType_4_0=rulePredType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualVarNameRule());
	        }
       		set(
       			$current, 
       			"predType",
        		lv_predType_4_0, 
        		"PredType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQualVarNameAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleQualOpName
entryRuleQualOpName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualOpNameRule()); }
	 iv_ruleQualOpName=ruleQualOpName 
	 { $current=$iv_ruleQualOpName.current; } 
	 EOF 
;

// Rule QualOpName
ruleQualOpName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getQualOpNameAccess().getLeftParenthesisKeyword_0());
    }
	otherlv_1='op' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualOpNameAccess().getOpKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getQualOpNameAccess().getOpNameParserRuleCall_2()); 
    }
    this_OpName_2=ruleOpName
    { 
        $current = $this_OpName_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualOpNameAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualOpNameAccess().getOpTypeOpTypeParserRuleCall_4_0()); 
	    }
		lv_opType_4_0=ruleOpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualOpNameRule());
	        }
       		set(
       			$current, 
       			"opType",
        		lv_opType_4_0, 
        		"OpType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getQualOpNameAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleSort
entryRuleSort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSortRule()); }
	 iv_ruleSort=ruleSort 
	 { $current=$iv_ruleSort.current; } 
	 EOF 
;

// Rule Sort
ruleSort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSortAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleOpName
entryRuleOpName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpNameRule()); }
	 iv_ruleOpName=ruleOpName 
	 { $current=$iv_ruleOpName.current; } 
	 EOF 
;

// Rule OpName
ruleOpName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOpNameAccess().getPrefixPlaceParserRuleCall_0_0()); 
	    }
		lv_prefix_0_0=rulePlace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpNameRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_0_0, 
        		"Place");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getOpNameAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_num_2_0=RULE_INT
		{
			newLeafNode(lv_num_2_0, grammarAccess.getOpNameAccess().getNumINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_2_0, 
        		"INT");
	    }

)
)
    |(
(
		lv_op_3_0=	'!' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getOpNameAccess().getOpExclamationMarkKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "!");
	    }

)
)
    |(
(
		lv_op_4_0=	'+' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getOpNameAccess().getOpPlusSignKeyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "+");
	    }

)
)
    |(
(
		lv_op_5_0=	'-' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getOpNameAccess().getOpHyphenMinusKeyword_1_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, "-");
	    }

)
)
    |(
(
		lv_op_6_0=	'*' 
    {
        newLeafNode(lv_op_6_0, grammarAccess.getOpNameAccess().getOpAsteriskKeyword_1_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_0, "*");
	    }

)
)
    |(
(
		lv_op_7_0=	'/' 
    {
        newLeafNode(lv_op_7_0, grammarAccess.getOpNameAccess().getOpSolidusKeyword_1_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_7_0, "/");
	    }

)
)
    |(
(
		lv_op_8_0=	'-!' 
    {
        newLeafNode(lv_op_8_0, grammarAccess.getOpNameAccess().getOpHyphenMinusExclamationMarkKeyword_1_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_8_0, "-!");
	    }

)
)
    |(
(
		lv_op_9_0=	'-+' 
    {
        newLeafNode(lv_op_9_0, grammarAccess.getOpNameAccess().getOpHyphenMinusPlusSignKeyword_1_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_9_0, "-+");
	    }

)
)
    |(
(
		lv_op_10_0=	'--' 
    {
        newLeafNode(lv_op_10_0, grammarAccess.getOpNameAccess().getOpHyphenMinusHyphenMinusKeyword_1_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_10_0, "--");
	    }

)
)
    |(
(
		lv_op_11_0=	'-*' 
    {
        newLeafNode(lv_op_11_0, grammarAccess.getOpNameAccess().getOpHyphenMinusAsteriskKeyword_1_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_11_0, "-*");
	    }

)
)
    |(
(
		lv_op_12_0=	'-/' 
    {
        newLeafNode(lv_op_12_0, grammarAccess.getOpNameAccess().getOpHyphenMinusSolidusKeyword_1_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_12_0, "-/");
	    }

)
)
    |(
(
		lv_op_13_0=	'-^' 
    {
        newLeafNode(lv_op_13_0, grammarAccess.getOpNameAccess().getOpHyphenMinusCircumflexAccentKeyword_1_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_13_0, "-^");
	    }

)
)
    |(
(
		lv_op_14_0=	'-?' 
    {
        newLeafNode(lv_op_14_0, grammarAccess.getOpNameAccess().getOpHyphenMinusQuestionMarkKeyword_1_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_14_0, "-?");
	    }

)
)
    |(
(
		lv_op_15_0=	'+!' 
    {
        newLeafNode(lv_op_15_0, grammarAccess.getOpNameAccess().getOpPlusSignExclamationMarkKeyword_1_14_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_15_0, "+!");
	    }

)
)
    |(
(
		lv_op_16_0=	'++' 
    {
        newLeafNode(lv_op_16_0, grammarAccess.getOpNameAccess().getOpPlusSignPlusSignKeyword_1_15_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_16_0, "++");
	    }

)
)
    |(
(
		lv_op_17_0=	'+-' 
    {
        newLeafNode(lv_op_17_0, grammarAccess.getOpNameAccess().getOpPlusSignHyphenMinusKeyword_1_16_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_17_0, "+-");
	    }

)
)
    |(
(
		lv_op_18_0=	'+*' 
    {
        newLeafNode(lv_op_18_0, grammarAccess.getOpNameAccess().getOpPlusSignAsteriskKeyword_1_17_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_18_0, "+*");
	    }

)
)
    |(
(
		lv_op_19_0=	'+/' 
    {
        newLeafNode(lv_op_19_0, grammarAccess.getOpNameAccess().getOpPlusSignSolidusKeyword_1_18_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_19_0, "+/");
	    }

)
)
    |(
(
		lv_op_20_0=	'+^' 
    {
        newLeafNode(lv_op_20_0, grammarAccess.getOpNameAccess().getOpPlusSignCircumflexAccentKeyword_1_19_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_20_0, "+^");
	    }

)
)
    |(
(
		lv_op_21_0=	'+?' 
    {
        newLeafNode(lv_op_21_0, grammarAccess.getOpNameAccess().getOpPlusSignQuestionMarkKeyword_1_20_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_21_0, "+?");
	    }

)
)
    |(
(
		lv_op_22_0=	'/!' 
    {
        newLeafNode(lv_op_22_0, grammarAccess.getOpNameAccess().getOpSolidusExclamationMarkKeyword_1_21_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_22_0, "/!");
	    }

)
)
    |(
(
		lv_op_23_0=	'/+' 
    {
        newLeafNode(lv_op_23_0, grammarAccess.getOpNameAccess().getOpSolidusPlusSignKeyword_1_22_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_23_0, "/+");
	    }

)
)
    |(
(
		lv_op_24_0=	'/-' 
    {
        newLeafNode(lv_op_24_0, grammarAccess.getOpNameAccess().getOpSolidusHyphenMinusKeyword_1_23_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_24_0, "/-");
	    }

)
)
    |(
(
		lv_op_25_0=	'//' 
    {
        newLeafNode(lv_op_25_0, grammarAccess.getOpNameAccess().getOpSolidusSolidusKeyword_1_24_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_25_0, "//");
	    }

)
)
    |(
(
		lv_op_26_0=	'/^' 
    {
        newLeafNode(lv_op_26_0, grammarAccess.getOpNameAccess().getOpSolidusCircumflexAccentKeyword_1_25_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_26_0, "/^");
	    }

)
)
    |(
(
		lv_op_27_0=	'/?' 
    {
        newLeafNode(lv_op_27_0, grammarAccess.getOpNameAccess().getOpSolidusQuestionMarkKeyword_1_26_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_27_0, "/?");
	    }

)
)
    |(
(
		lv_op_28_0=	'*!' 
    {
        newLeafNode(lv_op_28_0, grammarAccess.getOpNameAccess().getOpAsteriskExclamationMarkKeyword_1_27_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_28_0, "*!");
	    }

)
)
    |(
(
		lv_op_29_0=	'*+' 
    {
        newLeafNode(lv_op_29_0, grammarAccess.getOpNameAccess().getOpAsteriskPlusSignKeyword_1_28_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_29_0, "*+");
	    }

)
)
    |(
(
		lv_op_30_0=	'*-' 
    {
        newLeafNode(lv_op_30_0, grammarAccess.getOpNameAccess().getOpAsteriskHyphenMinusKeyword_1_29_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_30_0, "*-");
	    }

)
)
    |(
(
		lv_op_31_0=	'**' 
    {
        newLeafNode(lv_op_31_0, grammarAccess.getOpNameAccess().getOpAsteriskAsteriskKeyword_1_30_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_31_0, "**");
	    }

)
)
    |(
(
		lv_op_32_0=	'*^' 
    {
        newLeafNode(lv_op_32_0, grammarAccess.getOpNameAccess().getOpAsteriskCircumflexAccentKeyword_1_31_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_32_0, "*^");
	    }

)
)
    |(
(
		lv_op_33_0=	'*?' 
    {
        newLeafNode(lv_op_33_0, grammarAccess.getOpNameAccess().getOpAsteriskQuestionMarkKeyword_1_32_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_33_0, "*?");
	    }

)
)
    |(
(
		lv_op_34_0=	'^' 
    {
        newLeafNode(lv_op_34_0, grammarAccess.getOpNameAccess().getOpCircumflexAccentKeyword_1_33_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_34_0, "^");
	    }

)
)
    |(
(
		lv_op_35_0=	'@' 
    {
        newLeafNode(lv_op_35_0, grammarAccess.getOpNameAccess().getOpCommercialAtKeyword_1_34_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_35_0, "@");
	    }

)
)
    |(
(
		lv_op_36_0=	'@@' 
    {
        newLeafNode(lv_op_36_0, grammarAccess.getOpNameAccess().getOpCommercialAtCommercialAtKeyword_1_35_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_36_0, "@@");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getOpNameAccess().getSuffixPlaceParserRuleCall_2_0()); 
	    }
		lv_suffix_37_0=rulePlace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpNameRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_37_0, 
        		"Place");
	        afterParserOrEnumRuleCall();
	    }

)
)?(((	'(' 
(
(
RULE_ID

)
)	':' 
(
(
ruleOpType
)
)(	';' 
(
(
RULE_ID

)
)	':' 
(
(
ruleOpType
)
))*	')' 
))=>(	otherlv_38='(' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getOpNameAccess().getLeftParenthesisKeyword_3_0_0());
    }
(
(
		lv_opName_39_0=RULE_ID
		{
			newLeafNode(lv_opName_39_0, grammarAccess.getOpNameAccess().getOpNameIDTerminalRuleCall_3_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"opName",
        		lv_opName_39_0, 
        		"ID");
	    }

)
)	otherlv_40=':' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getOpNameAccess().getColonKeyword_3_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpNameAccess().getOpTypeOpTypeParserRuleCall_3_0_3_0()); 
	    }
		lv_opType_41_0=ruleOpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpNameRule());
	        }
       		set(
       			$current, 
       			"opType",
        		lv_opType_41_0, 
        		"OpType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_42=';' 
    {
    	newLeafNode(otherlv_42, grammarAccess.getOpNameAccess().getSemicolonKeyword_3_0_4_0());
    }
(
(
		lv_opName2_43_0=RULE_ID
		{
			newLeafNode(lv_opName2_43_0, grammarAccess.getOpNameAccess().getOpName2IDTerminalRuleCall_3_0_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"opName2",
        		lv_opName2_43_0, 
        		"ID");
	    }

)
)	otherlv_44=':' 
    {
    	newLeafNode(otherlv_44, grammarAccess.getOpNameAccess().getColonKeyword_3_0_4_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpNameAccess().getOpType2OpTypeParserRuleCall_3_0_4_3_0()); 
	    }
		lv_opType2_45_0=ruleOpType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpNameRule());
	        }
       		add(
       			$current, 
       			"opType2",
        		lv_opType2_45_0, 
        		"OpType");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_46=')' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getOpNameAccess().getRightParenthesisKeyword_3_0_5());
    }
))?)
;





// Entry rule entryRulePredName
entryRulePredName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredNameRule()); }
	 iv_rulePredName=rulePredName 
	 { $current=$iv_rulePredName.current; } 
	 EOF 
;

// Rule PredName
rulePredName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPredNameAccess().getPrefixPlaceParserRuleCall_0_0()); 
	    }
		lv_prefix_0_0=rulePlace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredNameRule());
	        }
       		set(
       			$current, 
       			"prefix",
        		lv_prefix_0_0, 
        		"Place");
	        afterParserOrEnumRuleCall();
	    }

)
)?((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPredNameAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_op_2_0=	'<' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getPredNameAccess().getOpLessThanSignKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "<");
	    }

)
)
    |(
(
		lv_op_3_0=	'<=' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getPredNameAccess().getOpLessThanSignEqualsSignKeyword_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "<=");
	    }

)
)
    |(
(
		lv_op_4_0=	'=<' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getPredNameAccess().getOpEqualsSignLessThanSignKeyword_1_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "=<");
	    }

)
)
    |(
(
		lv_op_5_0=	'=' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getPredNameAccess().getOpEqualsSignKeyword_1_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, "=");
	    }

)
)
    |(
(
		lv_op_6_0=	'>' 
    {
        newLeafNode(lv_op_6_0, grammarAccess.getPredNameAccess().getOpGreaterThanSignKeyword_1_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_0, ">");
	    }

)
)
    |(
(
		lv_op_7_0=	'>=' 
    {
        newLeafNode(lv_op_7_0, grammarAccess.getPredNameAccess().getOpGreaterThanSignEqualsSignKeyword_1_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_7_0, ">=");
	    }

)
)
    |(
(
		lv_op_8_0=	'=>' 
    {
        newLeafNode(lv_op_8_0, grammarAccess.getPredNameAccess().getOpEqualsSignGreaterThanSignKeyword_1_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPredNameRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_8_0, "=>");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPredNameAccess().getSuffixPlaceParserRuleCall_2_0()); 
	    }
		lv_suffix_9_0=rulePlace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredNameRule());
	        }
       		set(
       			$current, 
       			"suffix",
        		lv_suffix_9_0, 
        		"Place");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleVar
entryRuleVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarRule()); }
	 iv_ruleVar=ruleVar 
	 { $current=$iv_ruleVar.current; } 
	 EOF 
;

// Rule Var
ruleVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getVarAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	 iv_ruleToken=ruleToken 
	 { $current=$iv_ruleToken.current; } 
	 EOF 
;

// Rule Token
ruleToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
    |(
(
		lv_num_1_0=RULE_INT
		{
			newLeafNode(lv_num_1_0, grammarAccess.getTokenAccess().getNumINTTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"num",
        		lv_num_1_0, 
        		"INT");
	    }

)
)
    |((
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTokenAccess().getNameIDTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTokenAccess().getFullStopKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getTTokenParserRuleCall_2_2_0()); 
	    }
		lv_t_4_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenRule());
	        }
       		set(
       			$current, 
       			"t",
        		lv_t_4_0, 
        		"Token");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_str_0_0=RULE_STRING
		{
			newLeafNode(lv_str_0_0, grammarAccess.getLiteralAccess().getStrSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"str",
        		lv_str_0_0, 
        		"STRING");
	    }

)
)
;





// Entry rule entryRulePlace
entryRulePlace returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPlaceRule()); } 
	 iv_rulePlace=rulePlace 
	 { $current=$iv_rulePlace.current.getText(); }  
	 EOF 
;

// Rule Place
rulePlace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='__' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPlaceAccess().get__Keyword()); 
    }

    ;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '%{' ( options {greedy=false;} : . )*'}%';

RULE_ML_COMMENT2 : '%[' ( options {greedy=false;} : . )*']%';

RULE_ML_COMMENT3 : '%(' ( options {greedy=false;} : . )*')%';

RULE_PREC : '%prec(' ( options {greedy=false;} : . )*')%';

RULE_SL_COMMENT : '%%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_AUTHORS : '%authors' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_DATE : '%date' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_DISPLAY : '%display' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_LEFTASSOC : '%left_assoc' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_NUMBER : '%number' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_FLOATING : '%floating' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_PREC1 : '%prec' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


